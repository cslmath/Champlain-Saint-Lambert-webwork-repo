## DESCRIPTION
## WeBWorK Diagnostic test question: Pre-Calculus
##     Logic Symbols with Theory : symbols such as equal, not equal, implies, iff,...
##     Multiple Select
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe 
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display


DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "PGgraphmacros.pl",
    "PGchoicemacros.pl",
    "parserRadioButtons.pl",
    "PGcourse.pl",
  );
#TEXT(beginproblem());
TEXT(); # So no problem number given 
$showPartialCorrectAnswers = 0;   # set to 0 because multiple choice

Context("Numeric");
@var = qw(x y z w t r s u v);
$x = $var[random(0,$#var,1)];
do {$y = $var[random(0,$#var,1)];} until ($x ne $y);

@type = ("false","true");
$j = random(0,1,1);
$truefalse = $type[$j];

# displayed choices true or false
@allF = ("\(  $x = $y \,\Longleftrightarrow\, $x^2 = $y^2 \)",
           "\( $x = $y \,\Longleftrightarrow\,    |$x| = |$y| \)",
            "\(  $x^2 = $y^2 \,\Longleftrightarrow\,  $x = $y \)",
           "\( |$x| = |$y| \,\Longleftrightarrow\,    $x = $y \)",
           );
@allT = ("\(  $x = $y \,\Longleftrightarrow\,  e^$x = e^$y \)",
         "\( $x = \pm $y \,\Longleftrightarrow\,  |$x| = |$y| \)",
         "\(  e^$x = e^$y \,\Longleftrightarrow\,  $x = $y \)",
         "\( |$x| =  |$y| \,\Longleftrightarrow\,  $x = \pm $y \)",
         "\( $x^3 = $y^3 \,\Longleftrightarrow\,  $x = $y \)", 
        );

# set condition of correctness
if ($j == 0){  # Iff does not work
   @corrAns = @allF; 
   @incorrAns = @allT; 
   }
else { # Iff works
  @corrAns = @allT;
  @incorrAns = @allF;
   }
   
$numc = random(0,4,1);  # number of correct answers to display
@slicec = NchooseK(scalar(@corrAns),$numc);  
@randc = @corrAns[@slicec];

# Incorrect answers to display
$numi = 4 - $numc;   # the 4 is the number of choices to display
@slicei = NchooseK(scalar(@incorrAns),$numi);
@randi = @incorrAns[@slicei];

# Display the question, and the choices:
$quest = "Select the value(s), if any, that are $type.";
$multichoice = new_checkbox_multiple_choice();
if ($numc != 0){  # at least one correct answer
    $multichoice -> qa ( $quest, @randc,);
    $multichoice -> extra( @randi, "None of the above",);
    }
else {            # no correct answers
    $multichoice -> qa ( $quest, "None of the above",);
    $multichoice -> extra( @randi, );
}
$multichoice -> makeLast("None of the above");

BEGIN_PGML
_Symbols and Their Meaning:_  
[`=`]: equals. Example: [`x^2 - 4x + 4 = (x-2)^2`]  
[`\ne`]: not equal to. Example: [`(x-2)^2 \ne x^2 - 4 `]  
[`\Rightarrow`]: implies. Example: [`x=y \Rightarrow x^2 = y^2`]  
[`\Leftrightarrow`]: if and only if. Example: [` x-y=0 \Leftrightarrow x=y `]  

Select the statements, if any, that are [$truefalse].
[@ $multichoice->print_a() @]* 
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( checkbox_cmp( $multichoice->correct_ans() ) );

BEGIN_PGML_SOLUTION
Correct answer(s): [@ $multichoice->correct_ans() @]*  
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();
