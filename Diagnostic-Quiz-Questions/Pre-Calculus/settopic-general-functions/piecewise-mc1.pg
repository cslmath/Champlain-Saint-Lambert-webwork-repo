## DESCRIPTION
## WeBWorK Diagnostic test question: Pre-Calculus
##     Basic functions: evaluate piecewise function
##     Multiple Choice
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe 
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display

## DESCRIPTION
##   Precalculus - evaluate piecewise functions
## ENDDESCRIPTION

DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "parserRadioButtons.pl",
    "PGchoicemacros.pl",
    "PGcourse.pl",
  );
DOCUMENT();
#TEXT(beginproblem());
TEXT(); # So no problem number given 
$showPartialCorrectAnswers = 0;   # set to 0 because multiple choice
Context("Numeric");

# Show the correct answer more often than not
$showc = random(0,9,1);
$numc = 1; # show the correct answer
if ($showc == 0){$numc = 0;} # don't show the correct answer

#$numc = 1; # number of correct answer - show one for now (possibly 0) ??FIX
$k = random(-5,5,1);
$a = random(1,9,1);
#$a = 6; # test - remove later.
$m = random(2,9,1);
$y1 = 0;
$y2 = 0;
while ($y1 == $y2){
   $b = non_zero_random(-9,9,1);
   $f1 = Formula("$a - x^2");
   $f2 = Formula("$m x + $b")->reduce();
   $fd = Formula("$m x + $b + 1"); #decoy
   $x1 = $k - random(0,3,1);
   $x2 = $k + random(1,3,1);
   $y1 = $f1->eval(x=>"$x1");
   $y2 = $f2->eval(x=>"$x2"); 
   $y3 = max($y1,$y2)+random(1,3,1);  #distractor
   $y4 = min($y1,$y2)-random(1,3,1);  #distractor
#   # fix!! check for distinct values that display
}
@allAns = ("\( $y1 \)",
           "\( $y2 \)",
           "\( $y1 \) and \( $y2 \)",
           "\( $y3 \) and \( $y4 \)",
           "\( $y3 \)",
           "\( $y4 \)",
           );
$i = random(0,1,1); # which x-value to display
$xv = ($x1,$x2)[$i];
$correct = $allAns[$i];
           
$numi = 4 - $numc;   # the 4 is the total number of choices to display
@corrAns = (); 
push(@corrAns,$correct);
%yes = map{$_=>1} @corrAns;
@incorrAns = grep(!defined $yes{$_}, @allAns);

# Incorrect answers to display
@slicei = NchooseK(scalar(@incorrAns),$numi);
@randi = @incorrAns[@slicei];

if ($numc != 0){  # at least one correct answer
    $radio1 = RadioButtons([[$correct,@randi],
    "None of the above"],0);  # the 0 is the index of the correct answer    
    }
else {            # no correct answers
    $radio1 = RadioButtons([[@randi,],"None of the above",],4);  # the 4 is the index of the correct answer
}

#########################################################

BEGIN_PGML
Select the value, if any, of [`f([$xv])`] where [`f(x)`] is the piecewise function:  
>>[``f(x) = \left\{ \begin{array}{ll} [$f1], & x \le [$k] \\
                                      [$f2], & x > [$k] 
                                      \end{array} \right.``]<<  

[@ $radio1->buttons() @]*  
END_PGML
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( $radio1->cmp() );

BEGIN_PGML_SOLUTION
The answer is [@ $radio1->correct_ans @]*.
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();
