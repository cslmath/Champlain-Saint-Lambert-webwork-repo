## DESCRIPTION
## WeBWorK Diagnostic test question: Pre-Calculus
##     Exponent Laws: negative exponent law
##     Multiple Select
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe 
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display

DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "PGchoicemacros.pl",
    "PGcourse.pl",
  );
#TEXT(beginproblem());
TEXT();                         # So no problem number given 
$showPartialCorrectAnswers = 0; # set to 0 because multiple choice

Context("Numeric");
# display different variables
@var = qw(x y t u v z);
$x = $var[random(0,$#var,1)];

# Parameters
$a = random(3,9,1);
$asq = $a*$a;

# possible types (e.g. "integers", "real numbers")
@typearray = ("false","true");
$n = random(0,$#typearray,1);  # choose one of the types
$numc = random(0,4,1);  
$type = $typearray[$n];

# The full list of answers
@allAns = ("\( $x^{-n} = - $x^{n} \)",   # type 0=false, index 0
         "\( \frac{1}{$x^{n}} = - $x^{1/n} \)",      # type 0
         "\( $x^{-n} = - $x^{n} \)",  # type 0
   "\( \frac{1}{$x^{-n}} = - $x^{n} \)", # type 0, index 3
             "\( $x^{-n} = \frac{1}{$x^{n}} \)",      # type 1, index 4
             "\( \frac{1}{$x^{-n}} = $x^n \)",          # type 1
             "\( $x^{-1/n} = \frac{1}{$x^{1/n}}\)",      # type 1
             "\( $x^{1/n} = \frac{1}{$x^{-1/n}} \)",);  # type 1, index 7

# set conditions of correctness
if ($n == 0){    # type 0
    @corrAns = @allAns[0..3]; 
    @incorrAns = @allAns[4..7];
    }
else {   # type 1
    @corrAns = @allAns[4..7];
    @incorrAns = @allAns[0..3];
    }
# Correct answers to display:
@slicec = NchooseK(4,$numc);  
@randc = @corrAns[@slicec];

# Incorrect answers to display (from @incorrAns array)
$numi = 4 - $numc;   # the 4 is the number of choices to display
@slicei = NchooseK(scalar(@incorrAns),$numi);
@randi = @incorrAns[@slicei];

# Display the question, and the choices:
$quest = "";
$multichoice = new_checkbox_multiple_choice();
if ($numc != 0){  # at least one correct answer
    $multichoice -> qa ( $quest, @randc,);
    $multichoice -> extra( @randi, "None of the above",);
    }
else {            # no correct answers
    $multichoice -> qa ( $quest, "None of the above",);
    $multichoice -> extra( @randi, );
}
$multichoice -> makeLast("None of the above");

BEGIN_PGML
Select the statement(s), if any, that are [$type]. Assume that [`[$x] \ne 0`] and [` n \ne 0`].
[@ $multichoice->print_a() @]*  
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( checkbox_cmp( $multichoice->correct_ans() ) );

BEGIN_PGML_SOLUTION
Correct answer(s): [@ $multichoice->correct_ans() @]*  
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();
