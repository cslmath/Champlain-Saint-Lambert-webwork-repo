## DESCRIPTION
## WeBWorK Diagnostic test question: Calculus 1
##      Derivative of a^x (base a, a != 1)
##      Multiple select
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display



DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "PGchoicemacros.pl",
    "PGcourse.pl",
  );
#TEXT(beginproblem());
TEXT();                         # So no problem number given 
$showPartialCorrectAnswers = 0; # set to 0 because multiple choice

Context("Numeric");
# Set parameters
$c = random(2,7,1);

# Change the word displayed
@typearray = ("false","true");
$n = random(0,1,1);  # choose a word to display
$type = $typearray[$n];

# The full list of answers
#   Note! put at least 4 answers of each type
#   Extras (with no matched type) - as many or as few as you like
@allF = ("\( \frac{d}{dx}( x^a ) = x^a \ln a \)",
             "\( \frac{d}{dx}( a^x) =x a^{x-1} \)",
             "\( \frac{d}{dx}( a^x) =a^{x}\ln x \)",
             "\( \frac{d}{dx}(  a  ) =  a \)",
             "\( \frac{d}{dx} (a^{$c}) = a^{$c}\ln {$c}\)",
             );
@allT =  ("\( \frac{d}{dx} (a^x) = a^x \ln a \)",
             "\( \frac{d}{dt} (a^t) = a^t \ln a \)",
             "\( \frac{d}{dx} (a) = 0 \)",
             "\( \frac{d}{dx} (a^x + x^a) = a^x\ln a + ax^{a-1} \)",
             "\( \frac{d}{dx} (a^{$c}) = 0\)",
             );

# set conditions of correctness
if ($n == 0){  # f
    @corrAns = @allF;
    @incorrAns = @allT;
    }
else  {   # t
    @corrAns = @allT;
    @incorrAns = @allF;
    }

# Correct answers to display:
#   $numc : how many correct answers to display
#   @slicec : from the correct answers, choose a subset of indices
#             e.g. if $numc = 2, 0 1 2 3 => 0 3, or 1 4, or 2 3, etc
#   scalar(@corrAns) : total number of possible correct answers (usually 4)
$numc = random(1,3,1);  
@slicec = NchooseK(scalar(@corrAns),$numc);  
@randc = @corrAns[@slicec];

# Incorrect answers to display
$numi = 4 - $numc;   # the 4 is the number of choices to display
@slicei = NchooseK(scalar(@incorrAns),$numi);
@randi = @incorrAns[@slicei];

# Display the question, and the choices:
$quest = "Select the expression(s), if any, that are $type.";
$multichoice = new_checkbox_multiple_choice();
if ($numc != 0){  # at least one correct answer
    $multichoice -> qa ( $quest, @randc,);
    $multichoice -> extra( @randi, "None of the above",);
    }
else {            # no correct answers
    $multichoice -> qa ( $quest, "None of the above",);
    $multichoice -> extra( @randi, );
}
$multichoice -> makeLast("None of the above");

BEGIN_PGML
Let [`a`] be a positive real number such that [`a \ne 1`].  
[@ $multichoice->print_q() @]* 
[@ $multichoice->print_a() @]*  
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( checkbox_cmp( $multichoice->correct_ans() ) );

BEGIN_PGML_SOLUTION
Correct answer(s): [@ $multichoice->correct_ans() @]*  
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();