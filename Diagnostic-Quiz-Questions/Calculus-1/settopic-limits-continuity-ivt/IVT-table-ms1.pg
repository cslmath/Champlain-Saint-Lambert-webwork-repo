## DESCRIPTION
## WeBWorK Diagnostic test question: Calculus 1
##      IVT continuity
##      The equation f(x) = 0, f(x) given by a table
##      From a list of intervals, select by IVT the ones that contain a solution
##      Multiple select
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display

DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "PGchoicemacros.pl",
    "niceTables.pl",
    "PGcourse.pl",
  );
#TEXT(beginproblem());
TEXT();                         # So no problem number given 
$showPartialCorrectAnswers = 0; # set to 0 because multiple choice

Context("Numeric");
# Set parameters:
# Select random values for the x's, include some negative ones
# Choose the spot where the x's change sign, to use for a dsitrctor maybe
$xmin = -10; 
$xmax = 10;
$xSignChange = random(1,5,1);
$xIncrement1 = floor((0-$xmin)/$xSignChange);
@xValues = ();
push(@xValues, $xmin);
for($i=1; $i<=($xSignChange-1); $i++){
    push(@xValues, $xValues[$i-1]+$xIncrement1);
}
$xIncrement2 = floor(($xmax-0)/(6-$xSignChange));
push(@xValues, 0+$xIncrement2);
for($i=$xSignChange+1; $i<=5; $i++){
    push(@xValues, $xValues[$i-1]+$xIncrement2);
}

# Choose the "spot" for the solution at random
# Make it different from the x sign change for potential sneaky dsitractors
do{
$ySignChange = random(1,5,1);
} until($ySignChange != $xSignChange);

$ymin = -10; 
$ymax = 10;
$yIncrement1 = floor((0-$ymin)/$ySignChange);
@yValues = ();
push(@yValues, $ymin);
for($i=1; $i<=($ySignChange-1); $i++){
    push(@yValues, $yValues[$i-1]+$yIncrement1);
}
$yIncrement2 = floor(($ymax-0)/(6-$ySignChange));
push(@yValues, 0+$yIncrement2);
for($i=$ySignChange+1; $i<=5; $i++){
    push(@yValues, ($yValues[$i-1]+$yIncrement2));
}


# Generate all possible correct intervals, i.e., intervals on which the IVT applies
# Lower bound is to the left of ySignChange, upper bound is to the right
@corrAns = ();
for($i=0; $i <= $ySignChange-1; $i++){
    for($j=$ySignChange; $j <= 5; $j++){
        push(@corrAns, "\([$yValues[$i], $yValues[$j] ]\)" );
    }
}


# Generate all possible incorrect intervals, ie. intervals where IVT does not apply
# There are two types of "incorrect" intervals:
# 1. Both endpoints are negative
# 2. Both endpoints are positive
# Generate all possible wrong intervals
@incorrAns = ();

for($i=0; $i <= $ySignChange-2; $i++){
    for($j=$i+1; $j <= $ySignChange-1; $j++){
        push(@incorrAns, "\([$yValues[$i], $yValues[$j] ]\)" );
    }
}

for($i=$ySignChange; $i <= 4; $i++){
    for($j=$i+1; $j <= 5; $j++){
        push(@incorrAns, "\([$yValues[$i], $yValues[$j] ]\)" );
    }
}

# Correct answers to display
#     $numc: Display 0 to 4 correct answers
#     @slicec: indices of subset of correct answers
#     @randc: subset of correct answers
$numc = random(0,4,1);  # number correct answers up to max 4
@slicec = NchooseK(scalar(@corrAns),$numc);
@corrAns = @corrAns[@slicec];
# Incorrect answers to display
#     $numi: Display 4-$numc incorrect answers
#     @slicei: indices of subset of incorrect answers
#     @randi: subset of incorrect answers
$numi = 4 - $numc;
@slicei = NchooseK(scalar(@incorrAns),$numi);
@incorrAns = @incorrAns[@slicei];

$quest = ();
$multichoice = new_checkbox_multiple_choice();
if ($numc != 0){ # show at least one correct
    $multichoice -> qa (
        $quest, 
    @corrAns,
    );
    $multichoice -> extra(
    @incorrAns,
    );
} else { # show no correct choice ("None of the above" is correct answer)
   $multichoice -> qa (
        $quest, 
        "None of the above",
    );
    $multichoice -> extra(
    @incorrAns,
    );
}
$multichoice -> makeLast("None of the above");

$table = DataTable(
  [ ["\(x\)", "\($xValues[0]\)","\($xValues[1]\)",
              "\($xValues[2]\)","\($xValues[3]\)",
              "\($xValues[4]\)","\($xValues[5]\)"],
    ["\(f(x)\)", "\($yValues[0]\)","\($yValues[1]\)",
                 "\($yValues[2]\)","\($yValues[3]\)",
                 "\($yValues[4]\)","\($yValues[5]\)"]],
              midrules => 1,align => '|c|c|c|c|c|c|c|', );

BEGIN_PGML
Select the interval(s), if any, on which you can conclude, by using the Intermediate Value Theorem, that the continuous function, [`f(x)`], given by the following table has a root (i.e., a zero). 

[@ $table @]*

[@ $multichoice->print_a() @]*  
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( checkbox_cmp( $multichoice->correct_ans() ) );

BEGIN_PGML_SOLUTION
Correct answer(s): [@ $multichoice->correct_ans() @]*  
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();