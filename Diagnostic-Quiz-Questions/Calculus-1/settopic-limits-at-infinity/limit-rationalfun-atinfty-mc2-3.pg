## DESCRIPTION
## WeBWorK Diagnostic test question: Calculus 1
##     Limit of a rational function at -infinity. Fill in the missing factor.
##     All shown factors have + leading coefficients. 
##     Multiple choice
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe 
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGML.pl",
  "parserRadioButtons.pl",
  "PGchoicemacros.pl",  # needed for NchooseK
  "PGcourse.pl",
);

#TEXT(beginproblem());
TEXT(); # So no problem number given 
$showPartialCorrectAnswers = 0;   # set to 0 because multiple choice

Context("Numeric");

# Show the correct answer more often than not
#    $numc : number of correct answers to show (1 or 0 in multiple choice)
#    $showc : only if this equals 0 will the correct answer not appear
$showc = random(0,9,1);
$numc = 1;
if ($showc == 0){$numc = 0;}

# Set parameters
$a = random(1,9,1);
do {$b = random(1,9,1);} until ($b != $a);
$c = random(1,9,1);
$d = random(2,9,1);
$md = -1*$d;
$e = $d + 1; 
$f = random(2,9,1);

@allLim = ("-\infty","\infty","$md","$d","0",);
$n = random(0,$#allLim,1);
$limdisp = $allLim[$n];
@allAns = ( "\( $d x^2 - $e x \)",
            "\( $md x^2 + $e x \)",
            "\( $md x  \)",
            "\( $d x  \)",
            "\( $d \)",
            );
# Condition of correctness:
$correct = $allAns[$n];

@corrAns = ($correct);

# using map and grep to create an array of incorrects
%yes = map{$_=>1} @corrAns;
@incorrAns = grep(!defined $yes{$_}, @allAns);

if ($numc == 1){ # show correct answer
    @slicei = NchooseK(scalar(@incorrAns),3); # choose 3 incorrect to show
    @randi = @incorrAns[@slicei];
    $radio1 = RadioButtons(
    [[$correct,@randi],
    "None of the above"],0);  # correct index 0
    }
else { # don't show the correct answer
    @slicei = NchooseK(scalar(@incorrAns),4); # choose 4 incorrect to show
    @randi = @incorrAns[@slicei];
    $radio1 = RadioButtons([[@randi,],"None of the above"],4);  # correct index 4
    }

#$radio = RadioButtons([[$correct,@randi],"None of the above"],0); # correct index 0

BEGIN_PGML
Consider the limit of a rational function with a missing factor in its numerator:
[` \displaystyle\lim\limits_{x\to -\infty} \dfrac{(\quad\qquad)(x+[$a])}{(x+[$b])(x-[$c])}  = [$limdisp] `]
 
Select the option, if any, that could be the missing factor.  
[@ $radio1->buttons() @]*
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( $radio1->cmp() );

BEGIN_PGML_SOLUTION
Correct answer: [@ $radio1->correct_ans() @]*
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();
