## DESCRIPTION
## WeBWorK Diagnostic test question: Calculus 1
##      Basic differentiation rules
##      Constant multiple rule
##      Multiple select
## Institution: Champlain College Saint-Lambert
## Authors: Svetla Vassileva, Michele Titcombe
## WeBWorK Diagnostic Test Project, Winter 2021 - Winter 2022
## ENDDESCRIPTION
#
########## Array and Variable Names ##########
# @allAns, @allT, @allF ... : answer arrays of all possible display choices
# @corrAns, @incorrAns : correct answer array, incorrect answer array
# $numc : number of correct answers to display
# $numi : number of incorrect answers to display
# $showc: toggle to show the correct answer or not
# @slicec : indices of correct answer subset
# @slicei : indices of incorrect answer subset
# @randc : array of correct choice(s) to display
# @randi : array of incorrect choice(s) to display


DOCUMENT();
  loadMacros(
    "PGstandard.pl",
    "PGML.pl",
    "MathObjects.pl",
    "PGchoicemacros.pl",
    "PGcourse.pl",
  );
#TEXT(beginproblem());
TEXT();                         # So no problem number given 
$showPartialCorrectAnswers = 0; # set to 0 because multiple choice

Context("Numeric");
# display different variables
@var = qw(x y t u v z n);
$x = $var[random(0,$#var,1)];

# random a and b not equal
$a = non_zero_random(-9,9,1);
do {$b = random(-9,9,1);} until ($a != $b);
$d = random(2,5,1);

# possible types (e.g. "integers", "real numbers")
@typearray = ("false","true");
$n = random(0,1,1);  # choose one of the types
#$n = 0; # test - remove later
$type = $typearray[$n];

# The full list of answers
#   Note! put at least 4 answers of each type
#   Extras (with no matched type) - as many or as few as you like
@allAns = ("\( \frac{d}{dx}( e^c f(x) ) = e^c f'(x)+ e^c f(x) \)",  # type 0, index 0
             "\( \frac{d}{dx}( c g(x) ) = c g(x) + c g'(x) \)",# type 0
             "\( \frac{d}{dx}(  cf(x)  ) =  c + f'(x) \)",  # type 0
             "\( \frac{d}{dx} ( cg(x) ) = 0\cdot g'(x) \)",   # type 0, index 3
             "\( \frac{d}{dx} (cf(x)) = cf'(x) \)",      # type 1, index 4
             "\( \frac{d}{dx} (c g(x)) = c g'(x) \)",          # type 1
             "\( \frac{d}{dx} (c^$d g(x)) = c^$d g'(x) \)",      # type 1
             "\( \frac{d}{dx} (e^c f(x)) = e^c f'(x) \)",  # type 1, index 7
             );  # extra - no matched type

# set conditions of correctness
if ($n == 0){    # type 0
    @corrAns = @allAns[0..3]; 
    }
else  {   # type 1
    @corrAns = @allAns[4..7];
    }

# Correct answers to display:
#   $numc : how many correct answers to display
#   @slicec : from the correct answers, choose a subset of indices
#             e.g. if $numc = 2, 0 1 2 3 => 0 3, or 1 4, or 2 3, etc
#   scalar(@corrAns) : total number of possible correct answers (usually 4)
$numc = random(1,3,1);  
@slicec = NchooseK(scalar(@corrAns),$numc);  
@randc = @corrAns[@slicec];

# Array of incorrect answers (@incorrAns)
#   use map and grep to extract the correct answers (@corrAns)
%yes = map{$_=>1} @corrAns;
@incorrAns = grep(!defined $yes{$_}, @allAns);

# Incorrect answers to display
$numi = 4 - $numc;   # the 4 is the number of choices to display
@slicei = NchooseK(scalar(@incorrAns),$numi);
@randi = @incorrAns[@slicei];

# Display the question, and the choices:
$quest = "Select the expression(s), if any, that are $type.";
$multichoice = new_checkbox_multiple_choice();
if ($numc != 0){  # at least one correct answer
    $multichoice -> qa ( $quest, @randc,);
    $multichoice -> extra( @randi, "None of the above",);
    }
else {            # no correct answers
    $multichoice -> qa ( $quest, "None of the above",);
    $multichoice -> extra( @randi, );
}
$multichoice -> makeLast("None of the above");

BEGIN_PGML
Let [`f(x)`] and [`g(x)`] be differentiable functions, and [`c`] be a nonzero constant.  
[@ $multichoice->print_q() @]* 
[@ $multichoice->print_a() @]*  
END_PGML
############################
#  Answer evaluation
install_problem_grader(~~&std_problem_grader);
ANS( checkbox_cmp( $multichoice->correct_ans() ) );

BEGIN_PGML_SOLUTION
Correct answer(s): [@ $multichoice->correct_ans() @]*  
END_PGML_SOLUTION

COMMENT("Diagnostic test question. Do not assign for homework.");
ENDDOCUMENT();